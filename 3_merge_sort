#include<iostream>
using namespace std;

void merge(int arr[], int l, int mid, int r)
{
    int n1 = mid-l+1; //length of subarray 1
    int n2 = r-(mid+1)+1; //length of subarray 2

    int a[n1];
    int b[n2];

    for(int i=0; i<n1; i++) 
    {
        a[i]=arr[l+i]; // copy left elements
    }

    for(int i=0; i<n2; i++)
    {
        b[i]=arr[mid+1+i]; //copy right elements
    }

    int i=0, j=0, k=l;
    while(i<n1 && j<n2)
    {
        if(a[i]<= b[j])
        {
            arr[k]=a[i];
            k++, i++;
        }else{
            arr[k]=b[j];
            k++, j++;
        }
    }
    
    while(i<n1)
    {
        arr[k]=a[i];
        k++, i++;
    }

    while(j<n2)
    {
        arr[k] =b[j];
        k++, j++;
    }
}

void mergesort(int arr[], int l, int r)
{
    if(l>=r){
    return;
    }
    else{
    int mid = (l+r)/2;

    mergesort(arr,l,mid);
    mergesort(arr,mid+1,r);
    merge(arr, l, mid, r);
    }
}

int main()
{
    int arr[] = {23,12,13,15};
    int s = sizeof(arr)/sizeof(arr[0]); //array size
    
    mergesort(arr, 0, s-1); //left=0, right=4

    for(int i=0; i<s; i++)
    {
        cout << arr[i] << " ";
    }
    return 0;
}
